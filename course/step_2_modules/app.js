
// const validator = require('./node_modules/validator')
const chalk = require('./node_modules/chalk')
const getNotes = require('../step_2_modules/notes.js')
const yargs = require('./node_modules/yargs')                 // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç üî•üî•üî•üî• 

// 1Ô∏è‚É£
// –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–¥—É–ª—å nodemon –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–∞–π–ª–µ
// const msg = getNotes()
// const greenMsg = chalk.blue.inverse('Success!')
// console.log(greenMsg)
// console.log(validator.isURL('https://3dnews.ru'))
// console.log(msg)
// console.log(process.argv[2])

// 2Ô∏è‚É£
// —Ä–∞–±–æ—Ç–∞–µ–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º process.argv (arguments vector) –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
// const command = process.argv[2]   // arguments vector -> –º–∞—Å—Å–∏–≤ üî•üî•üî•üî•
// const commandAdd = process.argv

// commandAdd.forEach((element, index) => {
//   if (index >= 2) {
//     if (element === 'add') {
//       console.log('Adding note!')
//     } else if (element === 'remove') {
//       console.log('Removing note!')
//     } else {
//       console.log(chalk.blue.inverse(element))
//     }
//   } 
// });

// 3Ô∏è‚É£

// console.log(process.argv)
// console.log(yargs.argv)         // –∫–ª—é—á–∏ --help --version

// costomise yargs version
// --version –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–µ—Ä—Å–∏—é
yargs.version('1.1.0')
// console.log(yargs.argv) 

// create add command
// —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–∑—ã–≤–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
// –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: 1. –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞, 2. –û–ø–∏—Å–∞–Ω–∏–µ, 3. –§—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞
yargs.command({
  command: 'add',
  describe: 'Add a new note',
  handler() {
    console.log(chalk.bgGreen('New note has been added'))
  }
})

// Create remove command
yargs.command({
  command: 'remove',
  describe: 'Remove a new note',
  handler() {
    console.log(chalk.bgRed('The note has been removed'))
  }
})

// Create list command
yargs.command({
  command: 'list',
  describe: 'Argv was listed',
  handler() {
    console.log(chalk.magenta([...process.argv]))
  }
})

yargs.command({
  command: 'read',
  describe: 'info has beed read',
  handler() {
    console.log(chalk.cyan('some info'))
  }
})

console.log(yargs.argv) 